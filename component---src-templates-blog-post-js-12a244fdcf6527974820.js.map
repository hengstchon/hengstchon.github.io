{"version":3,"sources":["webpack:///./src/components/footer.js","webpack:///./src/components/post.js","webpack:///./src/templates/blog-post.js"],"names":["Styled","styled","div","rhythm","StyledLink","Link","colors","secondary","previous","next","to","fields","slug","rel","frontmatter","title","primary","data","location","post","markdownRemark","site","siteMetadata","date","dangerouslySetInnerHTML","__html","html","pageQuery","pageContext"],"mappings":"iOAOMA,EAASC,IAAOC,IAAV,qEAAGD,CAAH,+GAOKE,YAAO,KAIlBC,EAAaH,YAAOI,QAAV,yEAAGJ,CAAH,sIACLK,IAAOC,UAKaD,IAAOC,WAKvB,kBAAGC,EAAH,EAAGA,SAAUC,EAAb,EAAaA,KAAb,OACb,kBAACT,EAAD,KACE,4BACE,4BACGQ,GACC,kBAACJ,EAAD,CAAYM,GAAIF,EAASG,OAAOC,KAAMC,IAAI,QAA1C,KACKL,EAASM,YAAYC,OAASN,EAAKE,OAAOC,OAInD,4BACGH,GACC,kBAACL,EAAD,CAAYM,GAAID,EAAKE,OAAOC,KAAMC,IAAI,QACnCJ,EAAKK,YAAYC,OAASN,EAAKE,OAAOC,KADzC,UCjCJZ,EAASC,IAAOC,IAAV,mEAAGD,CAAH,uHAECK,IAAOU,QAGaV,IAAOU,QAMnBb,YAAO,IAIb,cAAyC,IAAtCc,EAAqC,EAArCA,KAAMT,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,KAAMS,EAAe,EAAfA,SAChCC,EAAOF,EAAKG,eACZL,EAAQE,EAAKI,KAAKC,aAAaP,MACrC,OACE,kBAAC,IAAD,CAAQG,SAAUA,EAAUH,MAAOA,GACjC,kBAAC,EAAD,KACE,4BAAKI,EAAKL,YAAYC,OAASI,EAAKR,OAAOC,MAC3C,+BAAQO,EAAKL,YAAYS,MACzB,yBAAKC,wBAAyB,CAAEC,OAAQN,EAAKO,QAE7C,6BACA,kBAAC,EAAD,CAAQlB,SAAUA,EAAUC,KAAMA,OC1B7BkB,GAJE,0BAAGV,EAAH,EAAGA,KAAH,IAASW,YAAepB,EAAxB,EAAwBA,SAAUC,EAAlC,EAAkCA,KAAQS,EAA1C,EAA0CA,SAA1C,OACb,kBAAC,EAAD,CAAMD,KAAMA,EAAMT,SAAUA,EAAUC,KAAMA,EAAMS,SAAUA,KAGxC","file":"component---src-templates-blog-post-js-12a244fdcf6527974820.js","sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport { rhythm } from \"../utils/typography\"\nimport { colors } from \"../utils/theme\"\n\nconst Styled = styled.div`\n  ul {\n    display: flex;\n    flex-wrap: wrap;\n    justify-content: space-between;\n    list-style: none;\n    margin-left: 0;\n    padding: 0 ${rhythm(0.2)};\n  }\n`\n\nconst StyledLink = styled(Link)`\n  color: ${colors.secondary} !important;\n  text-decoration: none;\n\n  :hover {\n    text-decoration: none;\n    border-bottom: 1px solid ${colors.secondary} !important;\n    padding-bottom: 2px;\n  }\n`\n\nexport default ({ previous, next }) => (\n  <Styled>\n    <ul>\n      <li>\n        {previous && (\n          <StyledLink to={previous.fields.slug} rel=\"prev\">\n            ← {previous.frontmatter.title || next.fields.slug}\n          </StyledLink>\n        )}\n      </li>\n      <li>\n        {next && (\n          <StyledLink to={next.fields.slug} rel=\"next\">\n            {next.frontmatter.title || next.fields.slug} →\n          </StyledLink>\n        )}\n      </li>\n    </ul>\n  </Styled>\n)\n","import React from \"react\"\nimport styled from \"styled-components\"\n\nimport Layout from \"./layout\"\nimport Footer from \"./footer\"\nimport { rhythm } from \"../utils/typography\"\nimport { colors } from \"../utils/theme\"\n\nconst Styled = styled.div`\n  a {\n    color: ${colors.primary};\n    :hover {\n      text-decoration: none;\n      border-bottom: 1px solid ${colors.primary};\n      padding-bottom: 2px;\n    }\n  }\n\n  small {\n    margin-bottom: ${rhythm(1)};\n  }\n`\n\nexport default ({ data, previous, next, location }) => {\n  const post = data.markdownRemark\n  const title = data.site.siteMetadata.title\n  return (\n    <Layout location={location} title={title}>\n      <Styled>\n        <h1>{post.frontmatter.title || post.fields.slug}</h1>\n        <small>{post.frontmatter.date}</small>\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n\n        <hr />\n        <Footer previous={previous} next={next} />\n      </Styled>\n    </Layout>\n  )\n}\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Post from \"../components/post\"\n\nexport default ({ data, pageContext: { previous, next }, location }) => (\n  <Post data={data} previous={previous} next={next} location={location} />\n)\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`\n"],"sourceRoot":""}