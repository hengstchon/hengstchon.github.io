{"version":3,"sources":["webpack:///./src/components/posts.js","webpack:///./src/pages/index.js","webpack:///./src/utils/typography.js","webpack:///./src/utils/theme.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/header.js","webpack:///./src/utils/globalStyle.js","webpack:///./src/components/layout.js"],"names":["StyledLink","styled","Link","withConfig","displayName","componentId","colors","secondary","primary","Styled","div","rhythm","components_posts","_ref","location","posts","siteTitle","react_default","a","createElement","layout","title","map","_ref2","node","react","key","fields","slug","to","frontmatter","date","excerpt","__webpack_require__","d","__webpack_exports__","pageQuery","data","site","siteMetadata","allMarkdownRemark","edges","typography__WEBPACK_IMPORTED_MODULE_0__","typography","n","Typography","baseFontSize","baseLineHeight","headerFontFamily","bodyFontFamily","googleFonts","name","styles","scaleRatio","scale","sizes","fonts","background","text","muted","container","small","m","module","exports","require","default","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","React","createContext","PropTypes","object","string","isRequired","func","ProdPageRenderer","pageResources","InternalPageRenderer","Object","assign","json","propTypes","shape","pathname","IndexHeader","h1","PostHeader","h3","header","GlobalStyle","createGlobalStyle","_templateObject","Layout","children","props","_objectWithoutPropertiesLoose"],"mappings":"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","file":"component---src-pages-index-js-41ad6f5822e56bab2071.js","sourcesContent":["import React, { Fragment } from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport Layout from \"./layout\"\nimport { rhythm } from \"../utils/typography\"\nimport { colors } from \"../utils/theme\"\n\nconst StyledLink = styled(Link)`\n  color: ${colors.secondary};\n  :hover {\n    color: ${colors.primary};\n  }\n`\n\nconst Styled = styled.div`\n  h2 {\n    margin-bottom: ${rhythm(1 / 4)};\n  }\n\n  small {\n    display: block;\n    margin-bottom: ${rhythm(0.5)};\n  }\n\n  p {\n    line-height: 1.6;\n  }\n`\n\nexport default ({ location, posts, siteTitle }) => (\n  <Layout location={location} title={siteTitle}>\n    {posts.map(({ node }) => (\n      <Fragment key={node.fields.slug}>\n        <Styled>\n          <h2>\n            <StyledLink to={node.fields.slug}>\n              {node.frontmatter.title || node.fields.slug}\n            </StyledLink>\n          </h2>\n          <small>{node.frontmatter.date}</small>\n          <p>{node.excerpt}</p>\n        </Styled>\n      </Fragment>\n    ))}\n  </Layout>\n)\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Posts from \"../components/posts\"\n\nexport default ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const posts = data.allMarkdownRemark.edges\n\n  return <Posts location={location} posts={posts} siteTitle={siteTitle} />\n}\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt(pruneLength: 120, truncate: true)\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n          }\n        }\n      }\n    }\n  }\n`\n","import Typography from \"typography\"\n\n\nconst typography = new Typography({\n  baseFontSize: \"16px\",\n  baseLineHeight: 1.8,\n  headerFontFamily: [\n    \"Merriweather\",\n    \"-apple-system\",\n    \"serif\",\n  ],\n  bodyFontFamily: [\n    \"-apple-system\",\n    \"sans-serif\",\n  ],\n  googleFonts: [{ name: 'Merriweather', styles: [400, 700] }],\n  scaleRatio: 2,\n})\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","export const colors = {\n  background: `#316666`,\n  text: `#F2E6C2`,\n  primary: `#eb7350`,\n  secondary: `#FFAF5A`,\n  muted: `hsla(0, 0%, 100%, 0.2)`,\n}\n\nexport const sizes = {\n  container: `672px`,\n}\n\nexport const fonts = {\n  small: `Merriweather`,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\n\nimport { rhythm } from \"../utils/typography\"\nimport { colors } from \"../utils/theme\"\n\nconst IndexHeader = styled.h1`\n  margin-bottom: ${rhythm(2)};\n`\n\nconst PostHeader = styled.h3`\n  margin-bottom: ${rhythm(1.5)};\n`\nconst StyledLink = styled(Link)`\n  color: ${colors.primary};\n  :hover {\n    text-decoration: none;\n  }\n`\n\nconst rootPath = `${__PATH_PREFIX__}/`\n\nexport default ({ title, location }) =>\n  location.pathname === rootPath ? (\n    <IndexHeader>\n      <StyledLink>{title}</StyledLink>\n    </IndexHeader>\n  ) : (\n    <PostHeader>\n      <StyledLink>{title}</StyledLink>\n    </PostHeader>\n  )\n","import { createGlobalStyle } from \"styled-components\"\nimport { rhythm } from \"../utils/typography\"\nimport { colors, fonts } from \"./theme\"\n\nexport const GlobalStyle = createGlobalStyle`\n  body {\n    background: ${colors.background};\n    color: ${colors.text};\n  }\n\n  a {\n    text-decoration: none;\n  }\n\n  blockquote {\n    border-left: 4px solid ${colors.muted};\n    padding-left: ${rhythm(1)};\n    opacity: 0.6;\n  }\n\n  small {\n    font-family: ${fonts.small};\n  }\n\n  hr {\n    background: ${colors.muted};\n  }\n\n  th, td {\n    padding-bottom: ${rhythm(0.3)};\n    padding-top: ${rhythm(0.3)};\n  }\n\n  pre {\n    margin-bottom: ${rhythm(10)}\n  }\n`\n","import React, { Fragment } from \"react\"\nimport styled from \"styled-components\"\n\nimport Header from \"./header\"\nimport { GlobalStyle } from \"../utils/globalStyle\"\nimport { rhythm } from \"../utils/typography\"\nimport { sizes } from \"../utils/theme\"\n\nconst Layout = styled.div`\n  max-width: ${sizes.container};\n  margin: 0 auto;\n  padding: ${rhythm(1.5)} ${rhythm(3 / 4)};\n`\n\nexport default ({ children, ...props }) => {\n  return (\n    <Fragment>\n      <GlobalStyle />\n      <Layout>\n        <Header {...props} />\n        <main>{children}</main>\n      </Layout>\n    </Fragment>\n  )\n}\n"],"sourceRoot":""}